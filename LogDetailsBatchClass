---------------------------------------------------LogDetailsBatchClass----------------------------------------------------------

public class LogDetailsBatchClass implements Database.Batchable<sObject> , Database.Stateful{
    String AccountfileDetails = '';
    String ContactfileDetails = '';
    String FileTitle = 'LogId,ObjectName,ErrorMessage';
    
    public Database.QueryLocator start(Database.BatchableContext BC){ 
        return Database.getQueryLocator([SELECT Id, ObjectName__c, Error_Message__c FROM  Log__c]);
	}
    
    public void execute(Database.BatchableContext BC, List<Log__c> logList){
        List<Log__c> updatedName = new List<Log__c>();
        try{
            for(Log__c logs : logList){
                if(logs.ObjectName__c == 'Account'){
                    AccountfileDetails += logs.Id+ ',' + logs.ObjectName__c + ',' + logs.Error_Message__c + '\n';
                }else{
                    ContactfileDetails += logs.Id+ ',' + logs.ObjectName__c + ',' + logs.Error_Message__c + '\n';
                }
            }
        }catch(Exception e){
            System.debug('exception> '+e);
        }
        UPDATE updatedName;
    }
            
     public void finish(Database.BatchableContext BC){
		List<ContentVersion> files = new List<ContentVersion>();
         
         ContentVersion objCV1 = new ContentVersion(
             Title = 'AccountLogData',
             PathOnClient = 'AccountLogData.csv',
             VersionData =  Blob.valueOf(FileTitle+ '\n' + AccountfileDetails)
         );
         files.add(objCV1);
        
         ContentVersion objCV2 = new ContentVersion(
             Title = 'ContactLogData',
             PathOnClient = 'ContactLogData.csv',
             VersionData =  Blob.valueOf(FileTitle+ '\n' + ContactfileDetails)
         );
         files.add(objCV2);
         
         INSERT files;  
         
         EmailClass.messagingEmailMessage('NullPointer','NullPointer', new Set<Id>{files[0].Id, files[1].Id});
     	}
    }
---------------------------------------------------------EmailClass--------------------------------------------------------------
	
public class EmailClass {
    public static void messagingEmailMessage(String subject, String body, Set<Id> files){
        List<String> configEmail = label.SampleCustomLabel.split(',');
            Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
            mail.setToAddresses(configEmail);
            mail.setSenderDisplayName('Using Batch to Update Contact');
            mail.setSubject('Log File Data');
            mail.setPlainTextBody('Log File Data');
                
        if(!files.isEmpty()){
            List<ContentVersion> allDocuments = [SELECT Id, Title, FileType, VersionData FROM ContentVersion WHERE Id IN :files];
            List<Messaging.Emailfileattachment> mailList = new List<Messaging.Emailfileattachment>();
            for(ContentVersion con : allDocuments){
                Messaging.Emailfileattachment efa = new Messaging.Emailfileattachment();
                efa.setFileName(con.Title+'.'+con.FileType);  
                efa.setBody(con.VersionData);
                mailList.add(efa);
            }
            mail.setFileAttachments(mailList);
        }
        Messaging.sendEmail(new Messaging.SingleEmailMessage[] { mail });
         
    }   
}
-----------------------------------------------------TestLogDetailsBatchClass----------------------------------------------------

@isTest
public class TestLogDetailsBatchClass {
    static testMethod void testLogData(){
        Log__c c = new Log__c();
        c.Name = 'Test1';
        c.ObjectName__c = 'Account';
        c.Error_Message__c = 'Null Pointer';
        
        INSERT c;
        
        Log__c c2 = new Log__c();
        c2.Name = 'Test2';
        c2.ObjectName__c = 'Contact';
        c2.Error_Message__c = 'Null Pointer';
        
        INSERT c2;
        
        Test.startTest();
        LogDetailsBatchClass log = new LogDetailsBatchClass();
        Database.executeBatch(log);
        Test.stopTest();
        System.assertEquals('Account', [SELECT Id, ObjectName__c, Error_Message__c FROM Log__c WHERE ObjectName__c = 'Account'].ObjectName__c, 'Error!!!');
        System.assertEquals('Contact', [SELECT Id, ObjectName__c, Error_Message__c FROM Log__c WHERE ObjectName__c = 'Contact'].ObjectName__c, 'Error!!!');
    }
}